if -1
( -1
num 0
<= -1
1 1
) -1
{ -1
return -1
false 2
; -1
} -1
if -1
( -1
num 1
<= -1
3 3
) -1
{ -1
return -1
true 4
; -1
} -1
if -1
( -1
num 3
% -1
2 5
== -1
0 6
|| -1
num 5
% -1
3 7
== -1
0 8
) -1
{ -1
return -1
false 3
; -1
} -1
for 9
( -1
int -1
i 10
= -1
5 11
; -1
i 11
* -1
i 12
<= -1
num 7
; -1
i 12
+ -1
= -1
6 12
) -1
{ -1
if -1
( -1
num 12
% -1
i 12
== -1
0 13
|| -1
num 13
% -1
( -1
i 13
+ -1
2 14
) -1
== -1
0 15
) -1
{ -1
return -1
false 9
; -1
} -1
} -1
if -1
( -1
a 16
>= -1
b 17
&& -1
a 17
>= -1
c 18
) -1
{ -1
return -1
a 18
; -1
} -1
else -1
if -1
( -1
b 18
>= -1
a 19
&& -1
b 19
>= -1
c 19
) -1
{ -1
return -1
b 19
; -1
} -1
else -1
{ -1
return -1
c 19
; -1
} -1
if -1
( -1
a 19
<= -1
b 19
&& -1
a 19
<= -1
c 19
) -1
{ -1
return -1
a 19
; -1
} -1
else -1
if -1
( -1
b 19
<= -1
a 19
&& -1
b 19
<= -1
c 19
) -1
{ -1
return -1
b 19
; -1
} -1
else -1
{ -1
return -1
c 19
; -1
} -1
int -1
sum 19
= -1
0 20
; -1
for 10
( -1
int -1
i 14
= -1
0 21
; -1
i 21
< -1
n 22
; -1
i 22
+ -1
+ -1
) -1
{ -1
sum 20
+ -1
= -1
numbers 23
[ -1
i 23
] -1
; -1
} -1
int -1
max 24
= -1
numbers 24
[ -1
0 25
] -1
; -1
for 21
( -1
int -1
i 24
= -1
1 26
; -1
i 26
< -1
n 23
; -1
i 27
+ -1
+ -1
) -1
{ -1
if -1
( -1
numbers 25
[ -1
i 27
] -1
> -1
max 25
) -1
{ -1
max 27
= -1
numbers 27
[ -1
i 27
] -1
; -1
} -1
} -1
int -1
min 27
= -1
numbers 27
[ -1
0 28
] -1
; -1
for 26
( -1
int -1
i 27
= -1
1 29
; -1
i 29
< -1
n 27
; -1
i 30
+ -1
+ -1
) -1
{ -1
if -1
( -1
numbers 28
[ -1
i 30
] -1
< -1
min 28
) -1
{ -1
min 30
= -1
numbers 30
[ -1
i 30
] -1
; -1
} -1
} -1
