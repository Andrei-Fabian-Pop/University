        -:    0:Source:/tmp/tmp.aGTKLkgnJ8/src/DynamicVector/DynamicVector.h
        -:    0:Graph:/tmp/tmp.aGTKLkgnJ8/cmake-build-debug-coverage/CMakeFiles/a5_6_AndreiFabianPop.dir/src/Tests/Tests.cpp.gcno
        -:    0:Data:/tmp/tmp.aGTKLkgnJ8/cmake-build-debug-coverage/CMakeFiles/a5_6_AndreiFabianPop.dir/src/Tests/Tests.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by andre on 19/03/2022.
        -:    3://
        -:    4:#pragma once
        -:    5:
        -:    6:#include "../Domain/Tutorial.h"
        -:    7:#include <cstring>
        -:    8:
        -:    9:template <typename TElement>
        -:   10:class DynamicVector
        -:   11:{
        -:   12:private:
        -:   13:    TElement* elems;
        -:   14:    int size{};
        -:   15:    int capacity{};
        -:   16:
        -:   17:public:
        -:   18:    // default constructor for a DynamicVector
        -:   19:    explicit  DynamicVector();
        -:   20:    explicit DynamicVector(int capacity);
        -:   21:
        -:   22:    // copy constructor for a DynamicVector
        -:   23:    DynamicVector(const DynamicVector& v);
        -:   24:    ~DynamicVector();
        -:   25:
        -:   26:    // assignment operator for a DynamicVector
        -:   27:    DynamicVector& operator=(const DynamicVector& v);
        -:   28:
        -:   29:    // Adds an element to the current DynamicVector.
        -:   30:    int add(const TElement& e);
        -:   31:
        -:   32:    // Removes the element from the specified index
        -:   33:    void remove(int index);
        -:   34:
        -:   35:    // Returns the index of the element with the specified values, returns -1 if it is not found
        -:   36:    int get_index(const std::string&  title, const std::string&  presenter, const std::string&  link);
        -:   37:
        -:   38:    bool valid(const Tutorial& e) const;
        -:   39:    // Checks if e is not already in the array, returns false if it is, true if it is not
        -:   40:
        -:   41:    bool valid_index(int index) const;
        -:   42:    // Checks if there is an entry at the index 'index'
        -:   43:
        -:   44:    /*
        -:   45:    Overloading the subscript operator
        -:   46:    Input: pos - a valid position within the vector.
        -:   47:    Output: a reference to the element o position pos.
        -:   48:    */
        -:   49:    TElement& operator[](int pos);
        -:   50:
        -:   51:    void operator+(const TElement& e);
        -:   52:
        -:   53:    int getSize() const;
        -:   54:
        -:   55:private:
        -:   56:    // Resizes the current DynamicVector, multiplying its capacity by a given factor (real number).
        -:   57:    void resize(int size);
        -:   58:};
        -:   59:
        -:   60:template<typename TElement>
        -:   61:DynamicVector<TElement>::DynamicVector(int capacity) {
        -:   62:    this->size = 0;
        -:   63:    this->capacity = capacity;
        -:   64:    this->elems = new TElement[capacity];
        -:   65:}
        -:   66:
        -:   67:template<typename TElement>
function _ZN13DynamicVectorI8TutorialEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   68:DynamicVector<TElement>::DynamicVector(const DynamicVector& v)
    $$$$$:   68-block  0
        -:   69:{
    #####:   70:    this->size = v.size;
    #####:   71:    this->capacity = v.capacity;
    #####:   72:    this->elems = new TElement[this->capacity];
    $$$$$:   72-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   72-block  1
    $$$$$:   72-block  2
    $$$$$:   72-block  3
call    2 never executed
    $$$$$:   72-block  4
branch  3 never executed
branch  4 never executed
    $$$$$:   72-block  5
call    5 never executed
branch  6 never executed
branch  7 never executed
    $$$$$:   72-block  6
    %%%%%:   72-block  7
    %%%%%:   72-block  8
branch  8 never executed
branch  9 never executed
    %%%%%:   72-block  9
call   10 never executed
    %%%%%:   72-block 10
    %%%%%:   72-block 11
branch 11 never executed
branch 12 never executed
    %%%%%:   72-block 12
    %%%%%:   72-block 13
    %%%%%:   72-block 14
call   13 never executed
    #####:   73:    for (int i = 0; i < this->size; i++)
    $$$$$:   73-block  0
    $$$$$:   73-block  1
branch  0 never executed
branch  1 never executed
    #####:   74:        this->elems[i] = v.elems[i];
    $$$$$:   74-block  0
call    0 never executed
    #####:   75:}
    $$$$$:   75-block  0
    %%%%%:   75-block  1
branch  0 never executed
branch  1 never executed
        -:   76:
        -:   77:template<typename TElement>
function _ZN13DynamicVectorI8TutorialED2Ev called 0 returned 0% blocks executed 0%
    #####:   78:DynamicVector<TElement>::~DynamicVector() {
    $$$$$:   78-block  0
    #####:   79:    delete[] this->elems;
    $$$$$:   79-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   79-block  1
    $$$$$:   79-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:   79-block  3
call    4 never executed
    $$$$$:   79-block  4
call    5 never executed
    #####:   80:}
        -:   81:
        -:   82:template<typename TElement>
function _ZN13DynamicVectorI8TutorialEaSERKS1_ called 0 returned 0% blocks executed 0%
    #####:   83:DynamicVector<TElement>& DynamicVector<TElement>::operator=(const DynamicVector& v)
    $$$$$:   83-block  0
        -:   84:{
    #####:   85:    if (this == &v)
    $$$$$:   85-block  0
branch  0 never executed
branch  1 never executed
    #####:   86:        return *this;
    $$$$$:   86-block  0
        -:   87:
    #####:   88:    this->size = v.size;
    #####:   89:    this->capacity = v.capacity;
        -:   90:
    #####:   91:    delete[] this->elems;
    $$$$$:   91-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   91-block  1
    $$$$$:   91-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:   91-block  3
call    4 never executed
    $$$$$:   91-block  4
call    5 never executed
    #####:   92:    this->elems = new TElement[this->capacity];
    $$$$$:   92-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   92-block  1
    $$$$$:   92-block  2
    $$$$$:   92-block  3
call    2 never executed
    $$$$$:   92-block  4
branch  3 never executed
branch  4 never executed
    $$$$$:   92-block  5
call    5 never executed
branch  6 never executed
branch  7 never executed
    $$$$$:   92-block  6
    %%%%%:   92-block  7
    %%%%%:   92-block  8
branch  8 never executed
branch  9 never executed
    %%%%%:   92-block  9
call   10 never executed
    %%%%%:   92-block 10
    %%%%%:   92-block 11
branch 11 never executed
branch 12 never executed
    %%%%%:   92-block 12
    %%%%%:   92-block 13
    %%%%%:   92-block 14
call   13 never executed
    #####:   93:    for (int i = 0; i < this->size; i++)
    $$$$$:   93-block  0
    $$$$$:   93-block  1
branch  0 never executed
branch  1 never executed
    #####:   94:        this->elems[i] = v.elems[i];
    $$$$$:   94-block  0
call    0 never executed
        -:   95:
    #####:   96:    return *this;
    $$$$$:   96-block  0
    $$$$$:   96-block  1
    %%%%%:   96-block  2
branch  0 never executed
branch  1 never executed
        -:   97:}
        -:   98:
        -:   99:template<typename TElement>
function _ZN13DynamicVectorI8TutorialE3addERKS0_ called 0 returned 0% blocks executed 0%
    #####:  100:int DynamicVector<TElement>::add(const TElement& e)
    $$$$$:  100-block  0
        -:  101:{
    #####:  102:    if (valid(e)) {
    $$$$$:  102-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  103:        if (this->size == this->capacity)
    $$$$$:  103-block  0
branch  0 never executed
branch  1 never executed
    #####:  104:            this->resize(this->size + 1);
    $$$$$:  104-block  0
call    0 never executed
    #####:  105:        this->elems[this->size] = e;
    $$$$$:  105-block  0
call    0 never executed
    #####:  106:        this->size++;
        -:  107:
    #####:  108:        return 1;
        -:  109:    } else {
    #####:  110:        return 0;
    $$$$$:  110-block  0
        -:  111:    }
        -:  112:}
        -:  113:
        -:  114:template<typename TElement>
function _ZN13DynamicVectorI8TutorialE6resizeEi called 0 returned 0% blocks executed 0%
    #####:  115:void DynamicVector<TElement>::resize(int new_size)
    $$$$$:  115-block  0
        -:  116:{
    #####:  117:    this->capacity = new_size;
        -:  118:
    #####:  119:    auto* els = new TElement[this->capacity];
    $$$$$:  119-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  119-block  1
    $$$$$:  119-block  2
    $$$$$:  119-block  3
call    2 never executed
    $$$$$:  119-block  4
branch  3 never executed
branch  4 never executed
    $$$$$:  119-block  5
call    5 never executed
branch  6 never executed
branch  7 never executed
    $$$$$:  119-block  6
    %%%%%:  119-block  7
    %%%%%:  119-block  8
branch  8 never executed
branch  9 never executed
    %%%%%:  119-block  9
call   10 never executed
    %%%%%:  119-block 10
    %%%%%:  119-block 11
branch 11 never executed
branch 12 never executed
    %%%%%:  119-block 12
    %%%%%:  119-block 13
    %%%%%:  119-block 14
call   13 never executed
    #####:  120:    for (int i = 0; i < this->size; i++)
    $$$$$:  120-block  0
    $$$$$:  120-block  1
branch  0 never executed
branch  1 never executed
    #####:  121:        els[i] = this->elems[i];
    $$$$$:  121-block  0
call    0 never executed
        -:  122:
    #####:  123:    delete[] this->elems;
    $$$$$:  123-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  123-block  1
    $$$$$:  123-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:  123-block  3
call    4 never executed
    $$$$$:  123-block  4
call    5 never executed
    #####:  124:    this->elems = els;
    #####:  125:}
    $$$$$:  125-block  0
    %%%%%:  125-block  1
branch  0 never executed
branch  1 never executed
        -:  126:template<typename TElement>
function _ZN13DynamicVectorI8TutorialEixEi called 0 returned 0% blocks executed 0%
    #####:  127:TElement & DynamicVector<TElement>::operator[](int pos)
    $$$$$:  127-block  0
        -:  128:{
    #####:  129:    return this->elems[pos];
    $$$$$:  129-block  0
        -:  130:}
        -:  131:
        -:  132:template<typename TElement>
function _ZNK13DynamicVectorI8TutorialE7getSizeEv called 0 returned 0% blocks executed 0%
    #####:  133:int DynamicVector<TElement>::getSize() const
    $$$$$:  133-block  0
        -:  134:{
    #####:  135:    return this->size;
    $$$$$:  135-block  0
        -:  136:}
        -:  137:
        -:  138:template<typename TElement>
function _ZN13DynamicVectorI8TutorialE6removeEi called 0 returned 0% blocks executed 0%
    #####:  139:void DynamicVector<TElement>::remove(int index) {
    $$$$$:  139-block  0
    #####:  140:    for (int i = index; i < this->size - 1; ++i) {
    $$$$$:  140-block  0
    $$$$$:  140-block  1
branch  0 never executed
branch  1 never executed
    #####:  141:        this->elems[i] = this->elems[i+1];
    $$$$$:  141-block  0
call    0 never executed
        -:  142:    }
    #####:  143:    --this->size;
    #####:  144:}
        -:  145:
        -:  146:template<typename TElement>
function _ZN13DynamicVectorI8TutorialE9get_indexERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_S9_ called 2 returned 100% blocks executed 69%
        2:  147:int DynamicVector<TElement>::get_index(const std::string& title, const std::string& presenter, const std::string& link) {
        2:  147-block  0
        5:  148:    for (int i = 0; i < this->size; ++i) {
        2:  148-block  0
        5:  148-block  1
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        3:  148-block  2
        9:  149:        if (this->elems[i].get_title() == title &&
        4:  149-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:  149-block  1
call    3 returned 4
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        4:  149-block  2
branch  6 taken 4 (fallthrough)
branch  7 taken 0
        4:  149-block  3
call    8 returned 4
        4:  149-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 3
    %%%%%:  149-block  5
branch 11 never executed
branch 12 never executed
    %%%%%:  149-block  6
call   13 never executed
    %%%%%:  149-block  7
        9:  150:            this->elems[i].get_presenter() == presenter &&
branch  0 taken 1 (fallthrough)
branch  1 taken 3
        1:  150-block  0
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  150-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        1:  150-block  2
        3:  150-block  3
        4:  150-block  4
branch  8 taken 1 (fallthrough)
branch  9 taken 3
        1:  150-block  5
call   10 returned 1
    %%%%%:  150-block  6
branch 11 never executed
branch 12 never executed
    %%%%%:  150-block  7
call   13 never executed
    %%%%%:  150-block  8
    %%%%%:  150-block  9
        5:  151:            this->elems[i].get_link() == link) {
        1:  151-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  151-block  1
call    3 returned 1
        4:  151-block  2
branch  4 taken 1 (fallthrough)
branch  5 taken 3
        1:  151-block  3
call    6 returned 1
    %%%%%:  151-block  4
branch  7 never executed
branch  8 never executed
    %%%%%:  151-block  5
call    9 never executed
    %%%%%:  151-block  6
    %%%%%:  151-block  7
        1:  152:            return i;
        1:  152-block  0
        -:  153:        }
        -:  154:    }
        -:  155:
        2:  156:    return -1;
        1:  156-block  0
        2:  156-block  1
        -:  157:}
        -:  158:
        -:  159:template<typename TElement>
function _ZN13DynamicVectorI8TutorialEC2Ev called 0 returned 0% blocks executed 0%
    #####:  160:DynamicVector<TElement>::DynamicVector() {
    $$$$$:  160-block  0
    #####:  161:    this->elems = new TElement [0];
    $$$$$:  161-block  0
call    0 never executed
    #####:  162:    this->size = 0;
    #####:  163:    this->capacity = 0;
    #####:  164:}
        -:  165:
        -:  166:template<typename TElement>
function _ZNK13DynamicVectorI8TutorialE5validERKS0_ called 0 returned 0% blocks executed 0%
    #####:  167:bool DynamicVector<TElement>::valid(const Tutorial& e) const {
    $$$$$:  167-block  0
    #####:  168:    for (int i = 0; i < this->size; ++i) {
    $$$$$:  168-block  0
    $$$$$:  168-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  168-block  2
    #####:  169:        if (this->elems[i].get_title() == e.get_title() &&
    $$$$$:  169-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  169-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  169-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  169-block  3
branch  9 never executed
branch 10 never executed
    $$$$$:  169-block  4
call   11 never executed
    $$$$$:  169-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  169-block  6
call   14 never executed
    $$$$$:  169-block  7
branch 15 never executed
branch 16 never executed
    %%%%%:  169-block  8
branch 17 never executed
branch 18 never executed
    %%%%%:  169-block  9
call   19 never executed
    %%%%%:  169-block 10
    %%%%%:  169-block 11
    %%%%%:  169-block 12
branch 20 never executed
branch 21 never executed
    %%%%%:  169-block 13
call   22 never executed
    %%%%%:  169-block 14
    #####:  170:            this->elems[i].get_presenter() == e.get_presenter() &&
branch  0 never executed
branch  1 never executed
    $$$$$:  170-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  170-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    $$$$$:  170-block  2
call    8 never executed
branch  9 never executed
branch 10 never executed
    $$$$$:  170-block  3
    $$$$$:  170-block  4
    $$$$$:  170-block  5
branch 11 never executed
branch 12 never executed
    $$$$$:  170-block  6
call   13 never executed
    $$$$$:  170-block  7
branch 14 never executed
branch 15 never executed
    $$$$$:  170-block  8
call   16 never executed
    %%%%%:  170-block  9
branch 17 never executed
branch 18 never executed
    %%%%%:  170-block 10
call   19 never executed
    %%%%%:  170-block 11
    %%%%%:  170-block 12
    %%%%%:  170-block 13
branch 20 never executed
branch 21 never executed
    %%%%%:  170-block 14
call   22 never executed
    %%%%%:  170-block 15
    %%%%%:  170-block 16
    #####:  171:            this->elems[i].get_link() == e.get_link()) {
    $$$$$:  171-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  171-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  171-block  2
call    6 never executed
    $$$$$:  171-block  3
branch  7 never executed
branch  8 never executed
    $$$$$:  171-block  4
call    9 never executed
    $$$$$:  171-block  5
branch 10 never executed
branch 11 never executed
    $$$$$:  171-block  6
call   12 never executed
    %%%%%:  171-block  7
branch 13 never executed
branch 14 never executed
    %%%%%:  171-block  8
call   15 never executed
    %%%%%:  171-block  9
    %%%%%:  171-block 10
    %%%%%:  171-block 11
branch 16 never executed
branch 17 never executed
    %%%%%:  171-block 12
call   18 never executed
    %%%%%:  171-block 13
    %%%%%:  171-block 14
    #####:  172:            return false;
    $$$$$:  172-block  0
        -:  173:        }
        -:  174:    }
    #####:  175:    return true;
    $$$$$:  175-block  0
    $$$$$:  175-block  1
        -:  176:}
        -:  177:
        -:  178:template<typename TElement>
function _ZNK13DynamicVectorI8TutorialE11valid_indexEi called 0 returned 0% blocks executed 0%
    #####:  179:bool DynamicVector<TElement>::valid_index(int index) const {
    $$$$$:  179-block  0
    #####:  180:    if (index >= 0 && index < this->size) {
    $$$$$:  180-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  180-block  1
branch  2 never executed
branch  3 never executed
    #####:  181:        return true;
    $$$$$:  181-block  0
        -:  182:    }
    #####:  183:    return false;
    $$$$$:  183-block  0
        -:  184:}
        -:  185:
        -:  186:template<typename TElement>
function _ZN13DynamicVectorI8TutorialEplERKS0_ called 1 returned 100% blocks executed 43%
        1:  187:void DynamicVector<TElement>::operator+(const TElement& e) {
        1:  187-block  0
        1:  188:    if (valid(e)) {
        1:  188-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:  189:        if (this->size == this->capacity)
    $$$$$:  189-block  0
branch  0 never executed
branch  1 never executed
    #####:  190:            this->resize(this->size + 1);
    $$$$$:  190-block  0
call    0 never executed
    #####:  191:        this->elems[this->size] = e;
    $$$$$:  191-block  0
call    0 never executed
    #####:  192:        this->size++;
        -:  193:    }
        1:  194:}
